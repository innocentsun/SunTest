#指定代码的压缩级别
-optimizationpasses 5
#包名不混合大小写
-dontusemixedcaseclassnames
#混淆第三方jar包的类名
-dontskipnonpubliclibraryclasses
#混淆第三方jar包的类的属性、方法和变量名
-dontskipnonpubliclibraryclassmembers
#忽略警告
-ignorewarnings
#混淆时预校验
-dontpreverify
#混淆时记录日志
-verbose
#使用映射增加混淆
-applymapping proguard_mapping.txt
#不优化输入类文件
-dontoptimize
#混淆时采用的算法
-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*
#-optimizations method/inlining/*
#优化时允许访问并修改有修饰符的类和类的成员
-allowaccessmodification
#保留注解
-keepattributes *Annotation*
#保留泛型
-keepattributes Signature
#保留抛出异常的时候正确的行号
-keepattributes SourceFile,LineNumberTable
#一些继承android组件的类需要保留
-keep public class * extends android.app.Activity
-keep public class * extends android.app.Application
-keep public class * extends android.app.Service
-keep public class * extends android.content.BroadcastReceiver
-keep public class * extends android.content.ContentProvider
-keep public class * extends android.app.backup.BackupAgentHelper
-keep public class * extends android.preference.Preference
#序列化的类需要保留
-keep class * implements java.io.Serializable
#序列化的类的属性和方法需要保留
-keepclassmembers class * implements java.io.Serializable {
    static long serialVersionUID;
    static java.io.ObjectStreamField[] serialPersistentFields;
    void writeObject(java.io.ObjectOutputStream);
    void readObject(java.io.ObjectInputStream);
    java.lang.Object writeReplace();
    java.lang.Object readResolve();
}
#本地方法都需要保留
-keepclasseswithmembernames class * {
    native <methods>;
}
#自定义view的构造函数需要保留
-keepclasseswithmembernames class * {
    public <init>(android.content.Context, android.util.AttributeSet);
}
#自定义view的构造函数需要保留
-keepclasseswithmembernames class * {
    public <init>(android.content.Context, android.util.AttributeSet, int);
}
#资源文件需要保留
-keepclassmembers class **.R$* {
	public static <fields>;
}

-keep class sun.misc.Unsafe {*;}
#activity里面的match这个case的方法需要保留
-keepclassmembers class * extends android.app.Activity {
   public void *(android.view.View);
}
#枚举类里面的这两个方法需要保留
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}
#android序列化的类需要保留
-keep class * implements android.os.Parcelable {
	public static final android.os.Parcelable$Creator *;
}

-keepclassmembers class ** {
    public void on*Event(...);
}

-dontwarn  org.eclipse.jdt.annotation.**

-dontnote ct.**


#======   以下为app中定义的类或者第三方库中用到的类 (ashercai 2014-8-8)  ============================
#         规则：
#         1) 第三方库，如果已经混淆过，建议全部保留
#         2) 第三方库，如果包含动态库，建议全部保留
#         3) App的类，如果用到动态库，建议保留包 (如果明确动态库中没有创建Java对象或访问Java类成员，可混淆)
#         4) App的类，如果用到了反射，需检查代码，将涉及的类和成员保留
#         5) App的类，定义为@JavascriptInterface的成员，需要保留
#=============================================================================================
#需要保留的类和方法等类似写法
-keep class com.sun.innocentsun.utils.** {*;}
-keepclassmembers class com.sun.innocentsun.activity.MainActivity { public <methods>; }